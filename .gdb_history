print entity.node->type
print *entity
print entity
run
bt
y
run
bt
break codegen_generate_scope_variable
run
next
print entity
next
print entity
print *entity
break parse_variable_or_function
run
next
print *name_token
next
print *name_token
print dtype
break parse_variable_or_function
run
next
print *dtype
print dtype
next
print *name_token
break parser.c:776
run
print *node
step
next
step
next
print node->_struct.name
break parse_struct
run
next
print body_variable_size 
break parser.c:562
run
bt
clear
make
run
bt
break parse_variable
run
next
print *name_token
print dtype
print *dtype
c
c
c
next
print *name_token
print *dtype
print *((struct node*)(symresolver_get_symbol("abc")->node)
print *((struct node*)(symresolver_get_symbol("abc")->node))
print *((struct node*)(symresolver_get_symbol(current_process, "abc")->node))
print *((struct node*)(symresolver_get_symbol(current_process, "abc")->data))
print *((struct node*)(symresolver_get_symbol(current_process, "abc")->data))->_struct
print ((struct node*)(symresolver_get_symbol(current_process, "abc")->data))->_struct
print ((struct node*)(symresolver_get_symbol(current_process, "abc")->data))->_struct.body_n
print *((struct node*)(symresolver_get_symbol(current_process, "abc")->data))->_struct.body_n
break parser_datatype_init
run
next
print datatype_out->size
next
print datatype_out->type_str
c
next
c
next
c
next
c
next
c
next
step
next
print sym
print *sym
print *sym->data
break parse_variable
run
next
print *dtype
c
c
c
next
print *dtype
break parse_function_body
c
run
break parse_variable
c
next
print *dtype
break parse_function
riun
run
break parse_variable
run
next
c
next
print *dtype
print *dtypey
break codegen.c:445
run
bt
y
break codegen_handle_codegen_entity_for_expression 
run
next
bt
next
next
print *node
break codegen_handle_codegen_entity_for_expression
run
next
break codegen_handle_codegen_entity_for_expression
run
next
step
next
break codegen.c:445
run
break codegen_handle_codegen_entity_for_expression
run
next
print *entity_out
print entity_out
break codegen_handle_codegen_entity_for_expression
run
next
step
next
break codegen.c:440
run
next
print offset
break codegen.c:440
run
next
print offset
break struct_offset_for_node
run
next
bt
break struct_offset
run
next
print struct-name
break struct_offset
run
bt
y
break struct_offset_for_node
run
next
step
next
print right_operand
print *right_operand
step
next
print type
next
print type
print node
print *node
step
next
step
print compile_proc
print struct_name
break codegen.c:399
run
next
break codegen.c:399
run
print left_operand
print left_operand->var.type.type_str
print left_operand->var.type
print left_operand->var
print left_opernad
print left_operand
print *left_operand
break codegen.c:403
run
print left_variable_entity 
print left_variable_entity->node
print *left_variable_entity->node
break codegen.c:408
run
print offset
print offset
print left_variable_entity.node
print left_variable_entity.node->var.type.type_str
break struct_offset
run
next
print struct_name
print var_name
print var_name
print struct
-next
next
print struct_sym
print *struct_sym
print *struct_sym->data
print (struct node*)(struct_sym->data)
print *(struct node*)(struct_sym->data)
step
next
next
next
print struct_vars_vec
next
next
print var_node_cur
print *var_node_cur
next
next
next
break codegen.c:408
run
print offset
break codegen_get_entity_for_node
run
next
break codegen.c:408
run
print offset
now we will expect 12 when we make a variable "d"
break codegen.c:408
run
print offset
and we see 12 :) 
applying this to the base pointer will resolve correct memory location
break codegen.c:457
runm
run
next
print offset
print var_node
print *var_node
