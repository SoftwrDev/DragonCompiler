stepi
set $eax = *(int*)($eax)
stepi
print $eax
break resolver.c:619
run
break codegen.c:1415
run
next
break codegen.c:1420
run
break resolver_follow_array
run
break resolver_follow_array
run
next
print *left_entity
next
break resolver_merge_compile_time
break _resolver_merge_compile_times
run
next
print *right_entity 
print *le
print *left_entity
c
c
break resolver_follow
run
next
c
next
print *result
print *result->entity
print *result->entity->next
break resolver.c:395
run
bt
break resolver.c:459
run
bt
break resolver.c:459
run
print *node
print *node
print *node
print *node
break resolver.c:459
run
print *out_node
print *node
print node_var_datatype 
print *node_var_datatype 
print entity_name
break resolver_make_entity
run
next
print *node
next
next
print *entity
next
break resolver.c:395
run
bt
break rdefault.c:175
run
print *left_entity
print *right_entity
step
next
c
print *left_entity
print *right_entity
break main
run
layout asm
stepi
print $ebx
stepi
print $eax
stepi
print $eax
print $ebx
stepi
print $ebx
print $eax
break main
run
breka main
break main
run
layout asm
stepi
print $eax
stepi
print $eax
stepi
print $eax
print $ebx
stepi
print $ebx
stepi
print $ebx
stepi
print $edx
stepi
print $eax
print $edx
stepi
break main
run
layout asm
stepi
print $ebx
stepi
print $eax
print $ebx
stepi
print $ebx
stepi
print $eax
print *(int*)($eax)
break codegen_generate_entity_access_array_bracket_pointer
run
break codegen_generate_entity_access_array_bracket
run
next
step
next
next
print *result->last_entity 
break resolver.c:396
run
break resolver.c:396
run
print *custom_dtype 
print *node
break main
run
layout asm
stepi
print $eax
print $edx
stepi
break codegen.c:2151
run
break codegen.c:2151
run
print *result
print *result->last_entity 
break validate_node
run
next
print *node
c
next
print *node
run
run
bt
break symresolver_end_table
run
break symresolver_end_table
run
next
print last_table
print vector_peek(compiler->symbols.tables)
break symresolver.c:38
run
print last_table
print *last_table
break symresolver_new_table
run
next
print compiler->symbols.table
print compiler->symbols
c
next
print compiler->symbols.table
print &compiler->symbols.table
print *compiler->symbols.table
step
next
c
break symresolver_end_table
run
c
break symresolver_end_table 
run
next
bt
next
print *last_table
print last_table
print vector_peek(compiler->symbols.tables)
print vector_peek(compiler->symbols.tables)
print vector_peek(compiler->symbols.tables)
print vector_peek(compiler->symbols.tables)
print vector_peek(compiler->symbols.tables)
break symresolver.c:Â£6
run
break symresolver.c:36
run
print vector_peek(compiler->symbols.tables)
break symresolver.c:36
run
next
print last_table
print *last_table
break symresolver.c:23
run
c
print compiler->symbols.table
break symresolver_end_table
c
next
next
print last_table
print *(void*)(0x55555558c500)
print *(int*)(0x55555558c500)
print (int*)(0x55555558c500)
print (struct symbol*)(0x55555558c500)
print *(struct symbol*)(0x55555558c500)
print *(struct vector*)(0x55555558c500)
print *(struct vector*)(0x55555558c500)
break symresolver.c:37
run
print *last_table
next
break symresolver_new_table
run
next
c
next
print compiler->symbols.table
break symresolver_end_table
c
next
print last_table
next
print *compiler->symbols.table
c
break validate_return_node
run
next
print node->func.rtype
break validator.c:89
run
print node->func.rtype
next
print node->func.rtype
print *node
break parse_keyword_return
run
next
