next
print *token
next
print value_vec->count
break preprocessor.c:1674
run
step
next
break preprocessor.c:1674
run
step
next
break preprocessor.c:1671
run
step
next
next
next
print token->sval
next
print token->sval
print *token
break preprocessor_handle_identifier_macro_call_arguments
run
next
print *token
break preprocessor_handle_identifier_for_token_vector
run
next
c
next
c
next
c
next
break preprocessor.c:1671
run
next
print arguments->arguments.count
break preprocessor.c:1671
run
step
next
print *token
next
print *token
next
print *token
break preprocessor.c:1674
run
print function_name
break preprocessor.c:1671
run
b
bt
break preprocessor.c:!682
run
run
bt
break preprocessor_handle_identifier_for_token_vector
run
next
print token->sval
c
print token->sval
next
print token->sval
c
next
print token->sval
c
next
c
print token->sval
next
print token->sval
next
c
next
print token->sval
c
next
print token->sval
next
print *definition_val
print (struct token*)definition_val->data
print *(struct token*)definition_val->data
next
bt
make
break preprocessor.c:1642
run
print *Token
print *token
break preprocessor.c:1642
run
print *token
break preprocessor.c:1642
run
print *token
print function
print function_name
break preprocessor.c:1678
run
print *arguments
print *arguments->arguments 
break preprocessor.c:1677
run
step
next
next
print *token
next
print token->sval
print *token
next
print *token
next
print *token
next
print *token
next
print *token
next
print *token
next
print arguments
print arguments->arguments->count
break preprocessor.c:1744
run
break rexpressionable.c:354
run
break expressionable.c:354
run
break preprocessor_is_custom_operator
run
run
run
bt
run
bt
break expressionable.c:354
run
break expressionable.c:355
run
run
print var->val 
print var
print var->val->llnum 
print var->val
print var
print *var
run
bt
run
bt
break preprocessor_is_custom_operator
rubn
run
break preprocessor_parse_evaluate
run
break preprocessor.c:1689
run
run
bt
bt
break expressionable_parse
run
break preprocessor.c:533
run
print *next_token
print next_token
break preprocessor.c:533
run
print next_token
break preprocessor.c:566
run
print next_token
break preprocessor.c:1668
run
print *token
break preprocessor.c:1668
run
print *token
break lexer.c:94
run
print c
next
print c
next
c
pritn c
print c
c
print c
c
pritn c
print c
c
print c
run
run
bt
break preprocessor.c:531
run
print src_vec->count
print *next_token
print next_token
next
print next_token
print *next_token
run
bt
break preprocessor.c:545
run
print *argument
print *argument
run
bt
break preprocessor.c:555
run
print first_token_for_argument->between_brackets 
break lexer.c:476
run
next
ste
step
next
print tmp_token
c
break lexer.c:476
run
print c
c
print c
c
print c
c
break lexer.c:476
un
run
print lex_process->current_expression_count 
next
print lex_process->current_expression_count 
next
print token->between_brackets 
c
print lex_process->current_expression_count 
print token->between_brackets 
next
print token->between_brackets 
c
print lex_process->current_expression_count 
next
print token->between_brackets 
c
