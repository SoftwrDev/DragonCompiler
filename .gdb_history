run
break codegen_generate_cast
run
break codegen_generate_unary
run
bt
break parse_unary
break parse_cast
break parse_for_cast
c
run
next
next
print *Dtype
print *dtype
pritnt dtype
print dtype
bt
next
print *operand_node
next
print res
next
print result_node
print *result_node
next
print *exp_node
next
print *stmt_node
next
break parser.c:1385
run
print *token
c
print *token
c
print *token
c
print *token
c
print *token
run
bt
break parse_for_unary
run
next
print unary_op
next
c
next
print unary
print unary_op
next
step
next
print depth
break parse_expressionable
c
next
step
next
print *token
next
step
next
print *token_peek_next()
break codegen_generate_cast
run
next
bt
break codegen.c:1714
run
print *root_assignment_entity
break resolver.c:707
run
print *operand_entity
next
print *operand_entity
print node->cast.dtype
print operand_entity->dtype
next
print *operand_entity
break rcodegen.c:1714
run
break codegen.c:1714
run
print *root_assignment_entity
print *root_assignment_entity->dtype
print root_assignment_entity->dtype
break codegen.c:1813
run
print *res
print *res->data.resolved_entity 
print res->data.resolved_entity.dtype
break codegen_generate_unary_indirection
run
next
print *node->unary.operand
next
print res
bt
break main
run
layout asm
stepi
print $eax
print $ax
break main
run
layout asm
stepi
print $eax
stepi
print $eax
break parser.c:1853
run
print datatype->flags
print datatype->flags & ~1
print 0xfffff1 & ~1
print 0xfffff1
print 0xfffff1 & ~1
break parse_for_cast
run
next
break parse_for_cast
run
next
print dtype
break parse_for_cast
run
next
step
next
step
next
print datatype->flags
next
print datatype->flags
next
print dtype
print datatype
print *datatype
step
next
prijtn datatype->flags
print datatype->flags
next
print datatype->flags
next
break main
run layout
layout main
break main
run
layout asm
stepi
print $edx
print $eax
stepi
print $eax
stepi
print $eax
run
layout asm
bt
break main
run
layout asm
stpei
stepi
run
bt
break codegen.c:1296
run
next
break codegen.c:1296
run
next
break codegen.c:1304
run
step
next
sep
step
next
print *last_element
break codegen.c:1296
run
print *current_function
print *current_function-
print current_function->func
next
print current_function->func
break lexer.c:459
run
next
print *buffer_ptr(buffer)
print buffer_ptr(buffer)
print *(char*)buffer_ptr(buffer)
print (char*)buffer_ptr(buffer)
next
step
break read_number
run
next
print s
next
break token_make_number_for_value
c
next
print val
break token_make_number_for_value 
run
next
print val
next
break token_make_number_for
break token_make_number_for_value#
break token_make_number_for_value 
run
next
print val
next
step
break token_create
c
next
print _token
print *_token
print _token->fnum
print _token->dum
print _token->dnum
next
break lexer.c:494
run
print val.
print val
next
next
next
print token
print *token
yeah no floating points for now..
break parser.c:1811
run
next
print *left_node
run
bt
run
bt
break codegen.c:1300
run
next
print *node
next
