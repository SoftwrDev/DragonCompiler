stepi
print $ex
print $eax
break main
layout asm
run
stepi
print $eax
break main
break main
run
layout asm
stepi
print $eax
break main
run
layout asm
stepi
print $eax
lol its correct. 10 minutes wasted thinking it was wrong
break parse_for_normal_unary
break parse_for_normal_unary 
run
next
print unary_op
next
print *node_peek()
bt
step
next
layout source
layout prev
layout prev
next
print *exp_node
print *exp_node->exp.left
print *exp_node->exp.right
print *right_node
print *node_right
next
print *exp_node
print *exp_node->exp.left
print *exp_node->exp.right
print *exp_node->exp.left
print *exp_node->exp.right
print *exp_node->unary.operand
print *exp_node->exp.right
print *exp_node->exp.right.unary.operand
print *exp_node->exp.left
print *exp_node->exp.right
print *exp_node-.exp.right.operand
print *exp_node->exp.right.operand
print *exp_node->exp.right.unary
print exp_node->exp.right.unary
print exp_node->exp.right.unary.operand
print *(struct node*)(0x55555555579280
print exp_node->exp.right.unary.operand
print *print exp_node->exp.right.unary.operand
break parse_for_unary
run
next
print *node_peek()
print *node_peek()->unary.operand
print *node_peek()->unary.operand
next
print *node_right
print *node_left
break parser.c:980
run
break parse_for_unary
run
bt
break parser.c:1003
run
next
prin *token_next()
print *token_next()
print *token_next()
break parser.c:993
run
step
next
print unary_op
step
next
print token_peek_next()
print *token_peek_next()
run
bt
run
bt
run
bt
clear
run
bt
break preprocessor_definition_value
run
next
next
step
next
print definition->standard.value
print *definition
run
bt
break preprocessor_definition_value
run
next
next
step
next
print *definition
run
bt
break preprocessor_line_macro_value
run
next
step
next
print t1
next
run
bt
break preprocessor.c:66
run
print t1
run
bt
break preprocessor.c:931
run
step
next
next
bt
break preprocessor_line_macro_value
run
next
next
next
next
step
break preprocessor_token_vec_push_dst
run
next
print token_vec->count
next
print token
print *token
next
run
bt
break compiler.c:32
run
print node
print *node
next
c
print *node
run
bt
break compiler.c:32
run
run
bt
break compiler.c:32
run
print node->sval
c
print node->sval
print node
print *node
break preprocessor_handle_identifier
run
next
print token->sval
c
print token->sval
c
print token->sval
c
print token->sval
next
break preprocessor_token_vec_push_dst
c
next
print token_vec->count
next
print *token
next
break preprocessor.c:546
run
print toen_value_vec->Count
print toen_value_vec->count
print toen_value_vec->count
print token_value_vec->count
print value_token_vec->count
break preprocessor_token_vec_push_dst
c
next
print token_vec->count
next
print *token
run
bt
break preprocessor.c:1010
run
print compiler
print preprocessor
print *preprocessor
run
bt
break preprocessor.c:1033
run
print compiler
break preprocessor.c:1044
run
print compiler->preprocessor
print *compiler->preprocessor
break preprocessor.c:55
run
print process->preprocessor->compiler
break compiler.c:55
run
print *process
break compile_process_create
run
next
print process->preprocessor
print process->preprocessor->compiler
break preprocessor.c:1034
run
print compiler
print compiler->preprocessor
print *preprocessor
run
bt
break preprocessor_previous_token
ruhn
run
next
print compiler->token_vec_original->pindex
step
next
print ptr
next
print ptr
run
bt
break preproccessor.c:1017
break preprocessor.c:1017
break preproccessor.c:1017
break preprocessor.c:1017
run
print previous_token->pos.line
print previous_token
