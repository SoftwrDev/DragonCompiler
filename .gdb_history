stepi
print $eax
20+30+40+50*10
print 20+30+40+50*10
stepi
print $eax
stepi
print $eax
stepi
print $eax
break parser.c:157
break parser.c:1570
run
print *left_node
break lexer.c:518
run
print c
print *token
print token
brak parser.c:1572
run
break parser.c:1572
run
print *left_node
break lexer.c:234
run
print len
print data
next
print i
print len
break expressionable_parse_tenary
run
break expressionable_parse
run
break expressionable_parse
run
break preprocessor_handle_definition_token
run
next
print *name_token
next
step
next
print name_token->sval
next
break preprocessor_handle_identifier
run
next
print *definition
next
print token->Sval
print token->sval
c
print token->sval
c
print token->sval
c
print token->sval
next
next
next
break preprocessor.c:1240
run
print token->sval
next
run
bt
run
bt
run
bt
run
bt
break expressionable.c:273
run
print *(struct preprocessor_node*)(current_node)
break preprocessor.c:908
run
print definition->count
print *definition
next
step
next
step
next
print token->Sval
print token->sval
print *token
break preprocessor.c:914
run
print val
break preprocessor_evaluate
run
break preprocessor_evaluate_exp
run
break preprocessor_evaluate_exp
run
next
print left_operand
next
print node->exp.right
print *node->exp.right
break preprocessor.c:996
run
next
next
run
bt
break expressionable.c:92
run
print next_token->sval
print next_token->cval
bt
run
bt
break expressionable.c:165
run
print *token
break expressionable_parse_symbol
run
next
print *token
next
c
break expressionable_parse_symbol
run
c
break expressionable.c:165
run
bt
break expressionable.c:153
run
next
run
bt
break expressionable_parse_symbol
run
next
print *token
next
print *token
break expressionable.c:153
run
next
print *token
run
bt
run
bt
break expressionable.c:65
run
run
bt
run
run
bt
run
bt
run
bt
break parser.c:1386
run
step
next
print next_token
print next_token->sval
print *next_token
next
bt
break parser.c:1386
run
step
next
print *next_token
step
next
print *next_token
next
bt
run
bt
break expressionable.c:97
run
bt
q
run
bt
run
bt
break preprocessor_reaD_to_end_if
break preprocessor_read_to_end_if
c
run
next
if true_caluse
print true_clause 
next
break preprocessor.c:872
run
break preprocessor_hashtag_and_identifier
run
next
print str
next
c
next
print str
next
c
next
next
print *target_token
c
next
print *target_token
next
print *preprocessor_next_token_no_increment(compiler)
print *preprocessor_next_token_no_increment(compiler)
next
break preprocessor.c:543
run
print *target_toen
print *target_token
print str
c
break preprocessor.c:872
run
break preprocessor_hashtag_and_identifier
run
next
c
next
c
next
print *target_token
print str
next
print *preprocessor_next_token_no_increment(compiler)
print preprocessor_next_token(compiler)
print *preprocessor_next_token_no_increment(compiler)
break preprocessor_read_to_end_if 
run
next
next
step
next
print *preprocessor_next_token_no_increment(compiler)
next
step
next
step
next
print *target_token
print str
next
