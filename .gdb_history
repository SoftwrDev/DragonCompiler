c
print *right_operand->parenthesis->exp
c
print *right_operand->parenthesis->expc
print *right_operand->parenthesis->exp
break preprocessor.c:1393
run
step
next
print *root_node
next
next
next
run
bt
break lexer.c:702
run
print *process
print *process->token_vec
run
bt
break preprocessor_stddef_include_offsetof_evaluate 
break preprocessor_stddef_include_offsetof_value
run
next
print arugments
print argument
print arguments
bt
break static-includes.c:77
run
bt
break static-includes.c:72
run
print struct_or_union_arg 
print *struct_or_union_arg
print struct_or_union_arg->tokens->count
print member_arg->tokens->count
step
next
print arg_type
break static-includes.c:77
run
print arg_type
print member_name
print arg_name
print arg_type
break static-includes.c:88
run
print *struct_or_union_entity 
print arg_name
break static-includes.c:87
break static-includes.c:87
run
break static-includes.c:87
rubn
run
break preprocessor_stddef_include_offsetof
run
next
print sym
print arg_name
next
break symresolver_build_for_structure_node
run
break symresolver_build_for_node
run
break parse_keyword_for_global
run
break parse_keyword_for_global
run
next
print node->type
step
next
bt
run
bt
break preprocessor.c:652
run
print *token
bt
run
bt
break parser.c:1499
run
bt
break preprocessor.c:1193
run
break preprocessor.c:1193
un
run
print true_clause
print true_clause
break preprocessor_handle_elif_token
run
break preprocesso_read_to_end_if
break preprocessor_read_to_end_if 
run
next
break preprocessor_handle_identifier_for_token_vector
run
next
print token->sval
next
break preprocessor.c:504
run
step
next
next
step
next
print token
print *token
break preprocessor.c:507
run
step
next
step
next
print *token
next
break preprocessor.c:504
run
step
next
next
print td
break preprocessor_handle_typedef_body
un
run
next
print *token
next
print *token
break preprocessor.c:251
run
step
next
print compiler
next
print *token
break preprocessor.c:251
run
next
print *token
print priority_token_vec
print priority_token_vec->count
break preprocessor_handle_typedef_body
run
break preprocessor_handle_typedef_body
run
next
print *token
next
print *token
print *(struct token*)(token)
print **(struct token*)(token)
print **(struct token**)(token)
print *(struct token*)(token)
print compiler
print *compiler
break preprocessor.c:251
run
next
print *token
c
next
print *token
break preprocessor.c:"51
break preprocessor.c:251
run
next
print token
c
next
print token
print *token
print compiler
print *compiler
print *compiler->token_vec_original
break preprocessor.c:503
run
print src_vec
print src_vec->count
step
next
next
step
next
step
next
print token
print overflow_use_compiler_tokens 
print overflow_use_compiler_tokens 
step
next
print token
print *token
bt
break preprocessor_next_token_with_vector
c
next
print token
print *token
print *compiler->token_vec_original
print *(struct token*)(vector_at(compiler->token_vec_original, 0))
print *(struct token*)(vector_at(compiler->token_vec_original, 1))
print *(struct token*)(vector_at(compiler->token_vec_original, 2))
print *(struct token*)(vector_at(compiler->token_vec_original, 3))
print *(struct token*)(vector_at(compiler->token_vec_original, 4))
print *(struct token*)(vector_at(compiler->token_vec_original, 5))
print *(struct token*)(vector_at(compiler->token_vec_original, 6))
print *(struct token*)(vector_at(compiler->token_vec_original, 7))
break preprocessor_next_token_with_vector
run
next
print *compiler->token_vec_original
print *(struct token*)(vector_at(compiler->token_vec_original, 7))
c
next
print *token
next
step
next
print src_vec
print *token
next
next
print *name_token
break preprocessor.c:255
run
print *token
c
print *token
c
print *token
print token
bt
break preprocessor_handle_typedef_token
run
next
print td
print td
print td
break preprocessor.c:840
run
print definition
print *definition
print *definition->value
print *definition->_typdef
print definition->_typdef
print definition->_typedef
print definition->_typedef->value
print *definition->_typedef->value
print *(struct token*)(vector_at(definition->_typedef->value, 0))
