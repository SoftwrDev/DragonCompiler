next
print token
c
next
print token
print *token
print compiler
print *compiler
print *compiler->token_vec_original
break preprocessor.c:503
run
print src_vec
print src_vec->count
step
next
next
step
next
step
next
print token
print overflow_use_compiler_tokens 
print overflow_use_compiler_tokens 
step
next
print token
print *token
bt
break preprocessor_next_token_with_vector
c
next
print token
print *token
print *compiler->token_vec_original
print *(struct token*)(vector_at(compiler->token_vec_original, 0))
print *(struct token*)(vector_at(compiler->token_vec_original, 1))
print *(struct token*)(vector_at(compiler->token_vec_original, 2))
print *(struct token*)(vector_at(compiler->token_vec_original, 3))
print *(struct token*)(vector_at(compiler->token_vec_original, 4))
print *(struct token*)(vector_at(compiler->token_vec_original, 5))
print *(struct token*)(vector_at(compiler->token_vec_original, 6))
print *(struct token*)(vector_at(compiler->token_vec_original, 7))
break preprocessor_next_token_with_vector
run
next
print *compiler->token_vec_original
print *(struct token*)(vector_at(compiler->token_vec_original, 7))
c
next
print *token
next
step
next
print src_vec
print *token
next
next
print *name_token
break preprocessor.c:255
run
print *token
c
print *token
c
print *token
print token
bt
break preprocessor_handle_typedef_token
run
next
print td
print td
print td
break preprocessor.c:840
run
print definition
print *definition
print *definition->value
print *definition->_typdef
print definition->_typdef
print definition->_typedef
print definition->_typedef->value
print *definition->_typedef->value
print *(struct token*)(vector_at(definition->_typedef->value, 0))
run
bt
run
bt
run
bt
break lexer.c:597
run
c
break lexer.c:597
run
print *last_token
next
break vector.c:21
run
print index
print *vector
print *vector_back_or_null(vector)
print vector_back_or_null(vector)
print (struct token*)(vector_back_or_null(vector))
print *(struct token*)(vector_back_or_null(vector))
break lexer.c:597
run
print *last_token
print *lexer_last_token()
print *lexer_last_token()
print *lexer_last_token()
print *lexer_last_token()
step
step
step
next
print *(struct token*)(vector_back_or_null(vector))
print *(struct token*)(vector_back_or_null(vector))
step
step
step
next
print index
step
next
print index
print vector->mindex
print *vector
run
bt
run
bt
run
bt
run
bt
break parse_variable_function_or_struct_union 
run
next
print dtype
next
print *name_token
break parse_forward_declaration_struct
run
run
bt
break preprocessor.c:1557
run
break preprocessor_handle_elif_token 
run
next
print result
next
make
break preprocessor.c:1552
run
print result
break preprocessor.c:1552
run
step
next
print true_clause
next
run
bt
run
run
bt
run
bt
break symresolver.c:77
run
print node->sval
print node->_struct 
bt
run
bt
run
bt
run
bt
run
bt
run
bbt
run
 bt
run
bt
break parser.c:775
run
print stmt_node
print variable_size
print *variable_size
print *stmt_node
step
next
print *_variable_size
next
next
print largest_primative_var_node 
print largest_primative_var_node ->var
print largest_primative_var_node ->var.type
print largest_primative_var_node ->var.type.size
next
print body_node
print body_node->body
next
print parser_current_body
next
c
print stmt_node
step
next
print node->_struct
print node->_struct.body_n 
print *node->_struct.body_n 
print node
print *node
next
c
next
print node
print *node
print node->_struct
print node->_struct.body_n
print *node->_struct.body_n
print *node->_struct.body_n
print node->_struct.body_n
break variable_struct_node
run
c
break variable_struct_node
run
break variable_struct_node
run
c
c
next
print *va_node
print *var_node
next
print var_node->var
print var_node->var.type
print var_node->var.type->struct_node 
print *var_node->var.type->struct_node 
watch *0x5555555bdfb0
c
run
bt
c
bt
run
bt
run
bt
