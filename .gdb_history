   int x;
   int m;
   union mm aa;
};
struct dog d;
int main()
{
   d.x = 10;
   d.m = 20;
   d.aa.k = 50;
run
bt
run
bt
run
bt
y
run
bt
break helper.c:60
run
c
c
c
print struct_sym
break helper.c:61
run
c
print struct_sym
break codegen_generate_assignment_expression
run
next
next
print *node->exp.left
print *node->exp.left
next
break resolver_default_new_entity_data_for_var_node
run
print offset
next
print offset
print offset
c
next
print offset
bt
break parser.c:2042
run
print var_node->var.aoffset
c
print var_node->var.aoffset
c
print var_node->var.aoffset
c
print var_node->var.aoffset
c
print var_node->var.aoffset
cc
print var_node->var.aoffset
c
print var_node->var.aoffset
c
break parse_struct
run
break parse_scope_offset_for_stack
break parser_scope_offset
c
next
step
next
print *last_entity
c
next
step
next
next
print offset
next
print *last_entity
print last_entity->node
print *last_entity->node
c
next
step
next
print offset
next
run
bt
break parser.c:291
run
next
print offset
print last_entity->stack_offset 
print last_entity->node->var.type.size
print last_entity->node
print last_entity->node->type
print variable_node(last_entity->node)->type
print *last_entity
print *last_entity->node
break parser_scope_offset_for_
break parser_scope_offset_for_structure 
run
next
print last_entity
break parser.c:765
run
bt
print *datatype
next
print var_node->var
next
print var_node->var
break parser.c:765
run
next
print *vaR_node
print *var_node
step
next
step
next
print last_entity
break parser.c:765
run
break parser.c:765
run
bt
mext
next
step
next
step
next
print *last_entity
next
next
print var_node->var.aoffset
c
break resolver_default_new_entity_data_for_var_node
run
next
print offset
c
next
print offset
bt
break rdefault:58
breka rdefault.c:58
breka rdefault.c:54
break rdefault.c:54
c
run
next
step
next
break rdefault.c:63
run
print offset
c
print offset
print *var_node
print offset
break parwser.c:1163
run
break parser.c:1163
run
print dtype
print *dtype
step
step
break parser.c:1163
run
print dtype
print *dtype
break make_variable_node_and_register
c
next
print datatype
print  *datatype
next
print *var_node
print offset
print var_node->var.aoffset
print var_node->var.aoffset
print var_node->var.type.size
next
break parser.c:812
run
print *_variable_size
print *node
step
next
print *_variable_size
next
print *_variable_size
c
break parser.c:932
run
print *variable_size
print *stmt_node
c
c
print *stmt_node
print *stmt_node
break parse_unary
run
break parser.c:932
run
print *stmt_node
c
print *stmt_node
c
print *stmt_node
print *stmt_node->va
print *stmt_node->var
print stmt_node->var
print stmt_node->unary 
print stmt_node->unary->operand
print *stmt_node->unary->operand
break parser.c:932
run
print *vaiable_size
print *variable_size
print *stmt_node
c
print *stmt_node
c
print *stmt_node
print stmt_node
watch stmt_node
watch *0x5555555895d0
run
bt
c
break parser_append_size_for_node
run
c
c
next
break parser.c:812
run
run
bt
break resolver.c:540
run
break resolver.c:540
run
print node->sval
break resolver.c:540
run
print node->sval
c
run
bt
y
