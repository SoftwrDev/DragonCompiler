run
next
c
next
c
next
print *target_token
print str
next
print *preprocessor_next_token_no_increment(compiler)
print preprocessor_next_token(compiler)
print *preprocessor_next_token_no_increment(compiler)
break preprocessor_read_to_end_if 
run
next
next
step
next
print *preprocessor_next_token_no_increment(compiler)
next
step
next
step
next
print *target_token
print str
next
break preprocessor_handle_ifdef_token
run
next
step
break expressionable.c:97
run
bt
print c
print next_token->sval
print next_token->pos
break expressionable.c:234
run
print *expressionable
c
run
bt
break parser.c:2006
run
print *token
c
break parser.c:2006
run
step
nedxt
next
step
next
step
step
next
print *token
next
step
next
print dtype
next
print *name_token
next
step
next
break parse_expression
break parse_expressionable
c
run
next
step
next
print *token
break parse_for_parentheses
run
next
next
next
print *node_pop()
break parser.c:1562
run
next
next
print *node_peek()
break parse_for_parentheses 
break parser.c:1562
run
c
step
next
step
step
step
next
print *token
nexyt
next
step
next
step
next
print *left_node
break codegen.c:1352
run
print node->parenthesis.exp
print *node->parenthesis.exp
print *node->parenthesis.exp->exp.left
print *node->parenthesis.exp->exp.right
break codegen_generate_exp_parenthesis_node 
run
next
print *node
print *node->exp
print *node->parenthesis 
print node->parenthesis 0
print node->parenthesis 
print node->parenthesis->exp
print *node->parenthesis->exp
break codegen.c:1129
run
nexxt
next
print right_node_priority 
print *node
run
bt
run
bt
run
bt
run
bt
run
bt
break preprocessor_resolve_protential_definition
run
break preprocessor_resolve_definitions 
run
next
print *token_vec
next
print token
next
print value_token_vec
break preprocessor_resolve_definitions
run
break preprocessor_resolve_definitions
run
next
print token
print token_vec
print token_vec->count
next
c
run
bt
run
bt
run
bt
run
bt
run
bt
run
c
bt
run
bt
run
bt
run
bt
run
bt
run
bt
c
bt
run
bt
run
bt
run
bt
break expressionable_parse_unary
run
bt
break preprocessor.c:1215
run
break preprocessor_evaluate_joined_node
run
break preprocessor
break preprocessor_evaluate_joined_node
run
next
print res
break expressionable_parse_unary
run
next
print unary
print unary_op
next
step
next
step
next
print token->sval
next
step
step
next
print previous_node
print expressionable->flags
run
bt
run
bt
run
bt
break token_make_special_number
run
next
bt
next
print *last_token
break lexer.c:525
run
bt
print *last_token
make
break token_make_special_number_hexadecimal
run
enxt
next
print number_str
break token_make_special_number_hexadecimal
run
break token_make_special_number_hexadecimal
run
next
break lexer.c:550
run
print number
print number_str
break token_make_special_number_hexadecimal 
c
run
next
print number_str
next
print number
c
make
