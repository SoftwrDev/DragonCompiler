print op
next
print op
next
print ptr
break codegen_generate_assignment_instruction_for_operator
run
break read_op
run
next
print ptr
break parse_exp_normal
run
next
print op
next
print *node_left
break parse_exp_normal
run
break parse_exp_normal
run
next
print op
next
next
break codegen_generate_normal_unary
run
next
break codegen.c:2471
run
break parse_for_right_operanded_unary
run
next
step
next
next
print node_peek()
print node_peek()->unary
print flags
break codegen.c:3315
run
break codegen_data_section_add
run
next
print new_data
next
print current_process->generator->custom_data_section 
print *current_process->generator->custom_data_section 
break codegen.c:3317
c
next
c
break codegen.c:3320
run
print str
c
print str
break codegen.c:1514
run
c
break codegen.c:3317
run
next
print str
print current_process->generator->custom_data_section 
print current_process->generator->custom_data_section 
print *current_process->generator->custom_data_section 
next
c
bt
make
break preprocessor_evaluate_function_call
run
break preprocessor_macro_function_execute
run
next
bt
next
print function_name
next
print definition->standard.arguments 
print definition->standard.arguments->count
next
print vector_count(definition_token_vec)
print vector_count(value_vec_target)
print vector_count(definition_token_vec)
print vector_count(arguments)
print vector_count(arguments->arguments)
bt
break preprocessor
break preprocessor_macro_function_push_something_definition
run
next
print arg_naem
print arg_name
break preprocessor_macro_function_push_argument
c
next
print *arguments
print *arguments->arguments 
break preprocessor_function_argument_push_to_vec
c
next
print *token
run
bt
layou tasm
break compiler.c:64
run
print *node-
print *node
print node->exp
print node->exp->left
print node->exp->left->sval
print node->exp->right->sval
print node->exp->right
print *node->exp->right
print *node->exp->right->exp.left
print *node->exp->right->exp.right
next
pritn node->exp.left
print node->exp.left
print node->exp.left->sval
print node->exp.right->exp.left
print node->exp.right->exp.left->sval
print node->exp.right->exp.right->sval
print node->exp.right->exp.right->type
print node->exp.right->exp.left->type
print node->exp.right->exp.left->SVAL
print node->exp.right->exp.left->sval
print node->exp.right->exp.left->type
print node->exp.right->exp.right->type
print node->exp.right->exp.right->sval
print node->exp.right->exp.right->llnum 
print (int)#node->exp.right->exp.right->llnum 
print (int)node->exp.right->exp.right->llnum 
c
./main
break codegen.c:1536
run
print *node
node->type = 4
set node->type = 4
c
break lexer.c:344
run
print buffer_ptr(buf)
print (const char*) buffer_ptr(buf)
step
break token_create
c
next
next
print *toke
print *token
step
next
watch (struct token*)(ptr)
c
break codegen.c:1536
run
print node->type
print node->sval
print *node
break codegen.c:1536
run
print node->sval
break codegen.c:1536
run
print node->sval
set node->type = 5
c
break parser.c:2128
c
run
print *datatype
c
print *datatype
break parser.c:2128
run
print *datatype
c
print *datatype
break parse_datatype
c
run
c
next
print name_token->sval
break parse_datatype
c
run
next
print *datatype
break parse_datatype
run
next
print *datatype
c
break parse_datatype
run
next
print 
print *dtype
print dtype
next
print name_token->sval
next
print dtype
next
print *node
next
break codegen_generate_scope_variable
run
next
print *node
print node->var.aoffset 
print node->var.val
next
print node->var.val->type
print node->var.val->str
print node->var.val->llnum 
print node->var.val->str
print node->var.val->string
print node->var.val->sval
print node->sval
print node->var.name 
print node->val
print node->var.val 
print node->var.val->sval
break codegen.c:2820
c
run
print node->var.val
print node->var.val->sval
break codegen.c:2820
c
run
next
print node->var.vla
print node->var.val
print node->var.val->sval
break parser.c:2183
c
run
print name_token->sval
print *dtye
print *dtype
print dtype->flags & 0b1000
print (dtype->flags & 0b1000)
print (dtype->flags & 0b1100)
break parser.c:2183
c
run
print *dtype
print (dtype->flags & 0b1000)
