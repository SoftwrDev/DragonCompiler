next
print *codegen_current_exp_state
print *codegen_current_exp_state()
next
print *codegen_current_exp_state()
print codegen_current_exp_state()
next
print *codegen_current_exp_state()
next
print codegen_current_exp_state()
next
print codegen_current_exp_state()
next
print codegen_current_exp_state()
print *codegen_current_exp_state()
next
print *codegen_current_exp_state()
break codegen.c:103
c
run
print codegen_current_exp_state()
c
print codegen_current_exp_state()
break codegen.c:106
c
c
print codegen_current_exp_state()
print *codegen_current_exp_state()
break test
run
print *node
next
print *node
run
bt
run
bt
y
break parser.c:386
c
run
step
next
c
break parse_body_multiple_statements 
run
bt
run
bt
break parser.c:479
c
run
print token->sval
break buffer_printf
run
break codegen_generate_global_variable_with_value
run
next
printf buf
next
print buf
print buffer_ptr(buf)
print (char*)((buffer-
print (char*)((buffer_ptr(buf))
print *((char*)(buffer_ptr(buf))
print *((char*)(buffer_ptr(buf)))
break codegen_exp_to_buffer
run
next
print *node
break codegen_exp_write_to_buffer
run
next
print node
next
print node->inum
break buffer_printf
run
next
print len
print fmt
break codegen_exp_write_to_buffer 
run
next
print (const char*)buffer_ptr(buffer)
print (const char*)buffer_ptr(buffer)+2
print (const char*)buffer_ptr(buffer)+3
print (const char*)buffer_ptr(buffer)+4
rubn
break codegen_exp_write_to_buffer
run
next
print node->sval
print node
print node->sval[1]
print node->sval[0]
next
run
bt
break codegen_compute_stack_size 
run
next
print vec
print *vec
break codegen_compute_stack_size
run
next
run
bt
run
bt
run
run
print entity
run
bt
break codegen_get_variable 
run
next
print name
break codegen_generate_identifier 
run
next
print var_entity 
print node->Sval
print node->sval
run
bt
break codegen_generate_identifier
run
break codegen_generate_identifier
run
next
print *var_entity 
print *var_entity->node
print *var_entity->node->var.name
break codegen_stack_offset
run
next
print offset
next
print last_entity->stack_offset
nextprint last_
print last_entity
print *last_entity
next
print offset
next
bt
next
print offet
print offset
next
prnt offsrt
print offset
print last_entity->stack_offset 
c
c
c
break codegen_generate_scope_variable
run
next
bt
next
print offset
dir
bt
c
next
c
run
next
step
next
print offset
next
print offset
c
next
step
next
print offset
next
next
print last_entity->stack_offset 
next
print offset
step
next
step
break codegen_new_scope_entity
run
next
print stack_offset
c
next
bt
break codegen_stack_offset
run
next
print offset
c
next
print offset
step
print stack_offset
next
print entity->stack_offset 
c
break codegen_generate_identifier
run
next
print var_entity 
print *var_entity 
print *var_entity->node
print var_entity
print *var_entity
make clean
clear
make
break codegen_get_variable 
run
bt
y
break codegen_generate_identifier
run
break codegen_generate_identifier
rubn
run
next
break codegen_get_variable
run
next
print name
next
print vector_count(current->entities)
next
print vector_count(current->entities)
next
print *entity
print entity->noade->var.name
print entity->node->var.name
next
print entity
print *entity
print *entity->node
print entity
print node
print entity
print *entity
run
run
run
print codegen_current_exp_state()
run
bt
