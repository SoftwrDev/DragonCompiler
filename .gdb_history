run
bt
btc
c
bt
c
break resolver.c:36
run
c
print *entity
c
print *entity
print *entity->scope
print &entity->scope
watch *0x5555555a0ea0
run
bty
bt
c
bt
print *scope
bt
print *result->last_struct_union_entity->scope
print result->last_struct_union_entity->scope
print *result->last_struct_union_entity->scope
print *result->last_struct_union_entity
print *result
next
print *result
next
print *scope
next
print *result
next
print *result
print *result->last_struct_union_entity 
print *result->last_struct_union_entity->scope
print *entity
print *entity->scope
print *result->last_struct_union_entity->scope
print *result->last_struct_union_entity->scope
br
bt
print *scope
print *entity->scope
break resolver.c:262
run
bt
print *entity
print scope->flags
print result
bt
next
print *scope
print *result->last_struct_union_entity 
print *result->last_struct_union_entity->scope
bt
break rdefault.c:167
run
print *right_entity->stack
print *right_entity->scope
print *right_entity
break resolver.c:270
run
print *var_node
print *var_node->var
print var_node->var-
print *scope
print *resolver_process_scope_current(process)
bt
c
c
print *var_node
print *resolver_process_scope_current(process)
c
break resolver_process_scope_current
run
c
break resolver_process_scope_current
run
c
next
print *process->scope.current
bt
next
print *entity
print *entity->scope
c
next
print *process->scope.current
c
break resolver.c:709
run
print *left_entity
print *right_entity
print *right_entity->scope
break resolver_create_new_entity
run
c
break resolver_create_new_entity
run
c
next
next
step
next
print *scope
print *entity
next
print *entity
c
next
print *scope
next
print *entity
bt
c
next
print *entity
next
print *entity
print *entity->scope
c
next
print *entity
next
c
next
print *scope
next
print *entity
bt
print *entity
next
print *scope
break resolver_follow_array
run
next
prnt *left_entity
print *left_entity
next
print *resolver_result_peek(result)
print resolver_result_peek(result)->array
print resolver_result_peek(result)->array->brackets
print resolver_result_peek(result)->array
print resolver_result_peek(result)->array.array
print resolver_result_peek(result)->array.dtype.brackets
print *node->exp.right
break resolver_default_merge_entities
run
next
print new_pos
print *left_entity
print *right_entity
print *right_entity->array
print *left_scope_data
print *right_scope_data
print *right_socpe_data
print *right_entity->dtype
print right_entity->dtype
print left_entity->node
print *left_entity->node
print *right_entity->node
print right_scope_data->offset
break resolver_default_make_private
run
break resolver_default_make_private
run
next
next
print *node
print *node
print node->var
print node->var->name
c
break resolver_default_make_private
run
next
c
[y
break resolver_create_new_entity
run
next
print *entity
next
print *entity
c
next
bt
next
print *entity
next
print *entity
next
c
next
print *entity
c
next
print *entity
print entity->var
print entity->node->var
print entity->node
print *entity->node
break resolver.c:470
run
print *bracket->array.inner
print node->bracket.inner
print *node->bracket.inner
break rdefault.c:17
break rdefault.c:170
run
break rdefault.c:168
run
break array_offset
run
next
print *dtype
c
next
print *dtype
print index
print index_value
next
print new_pos
print *left_entity
print *right_entity
break rdefault.c:171
run
print *left_entity
print *right_entity
print *right_entity->brack
print *right_entity
break rdefault.c:172
run
print left_entity->dtype
print right_entity->dtype
print *left_entity
print *right_entity
break rdefault.c:174
run
next
print new_pos
next
pritn new_pos
pritn new_pos
print new_pos
next
next
break rdefault.c:183
run
print offset
print new_pos
step
next
print entity
