print node->exp.left->type
print node->exp.right->type
break parser.c:1840
break parser_reorder_expression 
c
run
c
c
c
c
c
c
break parser_reorder_expression 
break parser.c:1840
run
c
c
c
c
c
c
c
c
c
break parser.c:1805
run
print node->exp.left
print *node->exp.left
print *node->exp.right
print *node->exp.right.exp.left
print *node->exp.right.exp.right
next
print *node
print *node->exp.left
print *node->exp.right
print *node->exp.left
print *node->exp.right
break parser.c:1808
run
break parser.c:1808
run
print node->exp.left->llnum 
print node->exp.right->llnum 
break parser.c:1805
run
print node->exp.left->llnum 
print node->exp.right->llnum 
bt
break parse_expressionable_roo
break parse_expressionable_root
c
run
bt
c
break parse_expressionable_root
run
c
break parse_expressionable_root
run
next
next
step
step
next
step
next
break parse_expressionable_root
run
next
break parser_const_to_literal 
c
next
print *node
print *node->exp.left
print *node->exp.right
print *node->exp.right->exp.left
print *node->exp.right->exp.right
step
next
step
next
print *node->exp.left
print *node->exp.right
step
next
print *node
next
print *node
print *node->exp.left
print *node->exp.right
bt
break parser.c:1798
run
print *node
print *node->exp.left
print *node->exp.right
c
print *node->exp.left
print *node->exp.right
print *node->exp.left
print *node->exp.right
print *node->exp.left
print *node->exp.right
next
next
bt
next
print *node->exp.left
print *node->exp.right
print *node->exp.right->exp.left
print *node->exp.right->exp.right
step
step
print *node->exp.right->exp.right
print *node->exp.right
break parser_evaluate_to_numerical_node 
run
next
next
print left_node->llnum 
print right_node->llnum 
print op
next
print result
next
break parser.c:1808
run
print node->exp.left->llnum 
print node->exp.right->llnum 
print node->exp.right->llnum 
print node->exp.right->llnum 
print node->exp.right->llnum 
print &node->exp.right->llnum 
print &node->exp.left->llnum 
break parser.c:1806
run
print node->exp.right->type
print node->exp.right->exp.left->llnum 
print node->exp.right->exp.right->llnum 
step
next
step
next
print node->exp.left.llnum 
print node->exp.right.llnum 
next
step
next
next
print *node_peek_or_null()
break parser.c:1808
run
print *node->exp.left
print *node->exp.right
run
bt
break parser_evaluate_identifier_to_numerical_node
run
next
print val
break node.c:70
run
print var->const_val 
print *node
print entity->node
print *entity->node
print *entity->node->val
print *entity->node->var
print entity->node->var
 break parser_evaluate_identifier_to_numerical_node
run
next
print val
print *node
break parse_variable
run
next
print value_node->llnum 
step
next
step
next
run
bt
run
bt
run
bt
make
./main 
run
bt
run
bt
break rdefault.c:55
run
bt
print *var_node
run
bt
print dtype
print datatype
break parser.c:756
run
print *var_node
print *ame_token
print *name_token
print *datatype
print *value_token
print *value_node
break rdefault.c:55
run
print var_node->var
print *var_node
run
bt
break parser.c:755
run
print var_node->var
print name_token->Sval
print name_token->sval
print name_token
bt
make
break parser.c:2164
run
break parser.c:2164
run
print *name_token
print dtype
run
bt
run
bt
break parser.c:2162
run
break parser.c:395
run
next
print current_process->pos
print *next_token
run
bt
run
bt
run
bt
run
bt
run
bt
run
bt
break helper.c:689
run
print var_node->pos
