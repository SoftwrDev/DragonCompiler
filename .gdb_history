next
break codegen_generate_statement
run
next
c
next
next
print node->exp.op
break codegen_generate_statement
run
next
step
next
print node->type
print *node
c
next
c
next
c
c
break codegen_generate_statement
run
c
c
c
next
c
run
c
next
step
next
step
next
break codegen_generate_statement
c
run
c
bt
step
next
step
step
print vector_count(statements)
break codegen_generate_scope
run
next
print vector_count(statements)
next
step
next
print statement_node
print statement_node->type
next
step
next
print *node
step
next
next
print *node
step
next
next
print *assignment_operand 
next
step
next
next
next
run
break codegen_generate_function_body
run
break codegen_generate_function_body
run
break codegen_generate_function_body 
run
next
step
next
print statements
print *statements
break codegen
delete
break codegen_generate_function_body 
runm
run
next
print node
step
next
print vector_count(statements)
print (struct codegen_scope_entity*)(vector_at(statements, 0))
print *(struct codegen_scope_entity**)(vector_at(statements, 0))
print *(struct codegen_scope_entity**)(vector_at(statements, 0))
print **(struct codegen_scope_entity**)(vector_at(statements, 0))
print **(struct codegen_scope_entity**)(vector_at(statements, 1))
print **(struct codegen_scope_entity**)(vector_at(statements, 0))
print **(struct codegen_scope_entity**)(vector_at(statements, 0))->node
print *(struct codegen_scope_entity**)(vector_at(statements, 0))->node
print *(*(struct codegen_scope_entity**)(vector_at(statements, 0)))->node
print *(*(struct codegen_scope_entity**)(vector_at(statements, 1)))->node
print *(*(struct codegen_scope_entity**)(vector_at(statements, 2)))->node
print *(*(struct codegen_scope_entity**)(vector_at(statements, 2)))->node
print *(*(struct codegen_scope_entity**)(vector_at(statements, 3)))->node
print *(*(struct codegen_scope_entity**)(vector_at(statements, 2)))->node
print *(*(struct codegen_scope_entity**)(vector_at(statements, 2)))
print *(*(struct codegen_scope_entity**)(vector_at(statements, 3)))
print (*(struct codegen_scope_entity**)(vector_at(statements, 3)))
break codegen_generate_function_body 
run
next
step
next
print *(*(struct codegen_scope_entity**)(vector_at(statements, 1)))->node
print vector_count(statements)
break codegen_generate_function_body 
run
next
step
print vector_count(statements)
next
break codegen_generate_function_body 
run
next
step
next
print vector_count(statements)
break parse_body()
break parse_body
run
next
print vector_count(body_vec)
break parse_body
run
next
step
next
break vector_push
c
next
print elem
c
next
print elem
c
next
print elem
c
next
print elem
print *node
print *elem
print (struct node*)elem
print *(struct node*)elem
bt
break parse_body_multiple_statements 
run
next
print stmt_node
next
print stmt_node
next
print stmt_node
print *stmt_node
next
print vector_count(body_vec)
break parse_body_multiple_statements
run
next
print vector_count(body)
print vector_count(body_vec)
bt
break parse_body_multiple_statements 
run
c
break parse_body
run
next
print vector_count(body_vec)
break codegen_generate_exp_node
run
next
print *node
print *node->right
print *node->exp.right
print *node->exp.right.right
print *node->exp.right.exp.right
print *node->exp.right.exp.right.exp.left
run
bt
break parsser_reorder_expressions
break parser_reorder_expressions 
run
next
print vector_count(exp_nodes)
print *(struct node*)(vector_peek_ptr(exp_nodes))
print *(struct node*)(vector_peek_ptr(exp_nodes)
print *(struct node*)(vector_peek_ptr(exp_nodes))
break parser_reorder_expressions 
run
next
print node
make clean
break parser_reorder_expressions 
run
next
print exp_nodes
print node
print *node
step
next
print vector->rindex
step
next
print node
run
bt
run
bt
break parser_reorder_expressions
run
next
print vector_count(exp_nodes)
next
print *node
next
print vector_back_ptr(exp_nodes)
next
break parser_reorder_expressions
run
next
step
next
print ptr
next
print *ptr
run
bt
run
bt
y
run
bt
y
run
bt
run
bt
break parser_reorder_expressions 
run
next
print *node
print *node->right
print node->right
