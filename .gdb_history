next
step
next
print *node
next
step
next
print *node
next
next
next
break parser.c:250
run
print *exp_node
print *exp_node->left
print *exp_node->exp.left
print *exp_node->exp.right
break parse_exp
run
next
next
next
print op_token
print *op_token
next
print op
next
print *node_left
next
next
next
next
print op_token
next
print op
next
next
next
print op
next
print *node_left
next
break parse_exp
run
next
print op
next
print *node_left
next
print op
print *node_left
next
print *node_left
next
print *node_right
next
print *exp_node
print *exp_node->left
print exp_node->exp.left
print *exp_node->exp.left
print *exp_node->exp.right
print *exp_node->exp.right
print *exp_node->exp.left
next
print *exp_node
next
print res
next
print *node_right
print *node_right->exp.left
print *node_right->exp.right
print *node_right
print *node_right->exp.left
print *node_left->exp.left
print *node_left
50*(100,20)
print *node_left
step
layout source
bt
next
next
next
next
print *exp_node
print exp_node->left
print exp_node->exp.left
print *exp_node->exp.left
print exp_node->exp.op
print exp_node->exp.left
print *exp_node->exp.left
print *exp_node->exp.right
print *exp_node->exp.left
print *exp_node->exp.right
print *exp_node->exp.right.exp.left
print *exp_node->exp.right
print *exp_node->exp.right
print *exp_node->exp.right.exp.left
print *exp_node->exp.right.exp.right
next
break parser.c:294
run
step
next
print *node_out
print **node_out
print **node_out->exp.left
print *node_out->exp.left
print *node_out->exp.right
next
c
step
next
next
print *node
print *node->exp.left
print *node->exp.right
next
layout source
next
print node->exp.right
print *node->exp.right
next
next
print *right_node
next
step
next
print precedence_left
print precedence_right
print op_right
print op_left
next
print op_left
print op_right
next
next
print *left_ode
print *left_node
print *node
print *node
print *node->exp
print node
make
break parser.c:249
run
print *exp
print *node
print *node->exp.left
print *node->exp.right
next
step
next
print op_left
print op_right
next
next
print precedence_left
print precedence_right
print *node
next
step
next
print *exp
print *node
print *node->exp.left
print *node->exp.right
print *node->exp.right->left
print *node->exp.right->exp.left
print *node->exp.right->exp.right
break parser.c:262
run
print *node
print *node->exp.left
print *node->exp.right
print *node
print *node->exp.left
print *node->exp.right
break parser.c:262
run
print *node
print *node->left
print *node->exp.left
print *node->exp.right
print *node->exp.rightleft
print *node->exp.right.left
print *node->exp.right.exp.left
print right_node->exp.left
print *right_node->exp.left
print node->exp.left
print *node->exp.left
print node->Exp.op
print node->exp.op
new_node = (50*100)
print right_node->exp.left
print *right_node->exp.left
print *right_node->exp.right
next
break parser.c:27
run
print node
next
break parser.c:267
run
print node
print *node
op of zero? lol...
print node->left
print *node->exp.left
print *node->exp.right
print *node->exp.left
print *node->exp.left->left
print *node->exp.left->exp.left
print *node->exp.left->exp.left.exp.left
print *node->exp.left->exp.left.exp.left.exp.left
print *node->exp.left->exp.left.exp.left.exp.left.exp.left
print *node->exp.left->exp.left.exp.left.exp.left.exp.left.exp.left
print *node->exp.left->exp.left
print *node->exp
print *node
print *node
print *node.exp.left
print *node.exp.left.exp.left
print *node.exp.left.exp.right
print *node.exp.left
print *node
print *node->exp.right
print *node
print *node
run
bt
break compiler.c:37
run
print *node
print *node->exp.left
print *node->exp.left.exp.left
print *node->exp.left.exp.right
print *node->exp.left.exp.left
print *node->exp.left
print *node->exp.right
print *node->exp.left
print *node->exp.left.right
print *node->exp.left.exp.right
print *node->exp.left.exp.left
print *node->exp.left.exp.left.exp.left
print *node->exp.left.exp.left.exp.right
print *node->exp.left.exp.right
print *node->exp.left
print *node->exp.left.exp.left
print *node->exp.left.exp.left.exp.left
print *node->exp.left.exp.left.exp.left.exp.left
print *node->exp.left.exp.left.exp.left.exp.left.exp.left
print *node->exp.left.exp.left.exp.left.exp.left.exp.left.exp.left
print *node->exp.left.exp.left.exp.left.exp.left.exp.left.exp.left.exp.left
print *node->exp.left.exp.left.exp.left.exp.left.exp.left.exp.left.exp.left.exp.left
print *node->exp.left.exp.left.exp.left.exp.left.exp.left.exp.left.exp.left.exp.left
