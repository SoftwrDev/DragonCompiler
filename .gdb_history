step
next
print node->exp.left
print *node->exp.left
print *node->exp.right
print *node->exp.right->exp.left
print *node->exp.right->exp.right
print *node->exp.right->exp.left
break parser.c:854
run
break parser.c:851
run
print *node->exp.left
print *node->exp.right
next
make
break parser.c:882
run
step
next
print *completed_node
print *completed_node->exp.right
print *completed_node->exp.left
break parser.c:822
run
next
print *completed_node
print completed_node->left
print completed_node->epx.left
print completed_node->exp.left
print *completed_node->exp.left
print *completed_node->exp.left->exp.right
print *completed_node->exp.left
print *completed_node->exp.left
print *completed_node->exp.left->exp.right
print *completed_node->exp.left->exp.right.parenthesis 
print *completed_node->exp.left->exp.right.parenthesis->exp
print *completed_node->exp.right
print *node->exp.right
print *node
break parser.c:825
run
next
print *node
print *node->exp.left
print *node->exp.right
break codegen.c:1174
run
break codegen.c:1171
run
print *result
print *result
clear
break codegen.c:1175
run
break codegen.c:1175
run
print *node->exp.left
step
next
next
print *entity
next
step
next
next
step
next
step
next
step
step
next
print *entity
break codegen.c:1173
run
print *left_entity
run
bt
run
bt
break codegen.c:1167
run
print *left_entity
print *left_entity->last_resolve.unary 
print *left_entity->last_resolve.referencing_node 
break main
run
layout asm
stepi
print $ebx
stepi
break main
run
layout asm
stepi
print $ebx
break main
run
layout asm
stepi
print $ebx
stepi
print $eax
stepi
print $ebx
print &x
break main
run
layout asm
stepi
print $ebx
stepi
print $ebx
stepi
break codegen_generate_statement_return
run
next
print node->stmt.ret.exp
print *node->stmt.ret.exp
next
print node->binded.function 
print *node->binded.function 
print node->stmt.ret.exp
print node->stmt.ret.exp->llnum 
next
break codegen.c:907
run
print value
c
print value
c
print value
break codegen.c:1916
run
step
next
step
break codegen.c:1916
run
break codegen_generate_expressionable
run
c
next
step
next
step
next
step
next
print value_node->llnum 
step
step
break codegen_gen_mov_or_math_for_value
run
break codegen_gen_mov_or_math_for_value
run
next
print value
c
next
print value
c
next
print value
next
break parser.:2332
run
break parser.c:2329
run
next
print *name_token
step
next
print dtype
print *dtype
next
break node_pop_remaining_push_to_root_vec 
run
next
print node_vector->count
next
print *node
next
print node_vector->count
print *node_vector
break make_variable_list_node
run
next
print var_list->count
break codegen_generate_scope_variable_for_list
run
next
print *var_node
print var_node->var
break codegen.c:1919
run
print *var_node
break codegen.c:1919
run
print *var_node
make
break parser.c:2340
run
print *var_node
next
print *(struct node*)(vector_peek(var_list))
run
run
bt
run
bt
y
break codegen.c:90
break codegen.c:907
run
print reg
print value
break codegen.c:679
run
print codegen_entity_private(entity)->address
break codegen.c:659
run
break codegen_entity_address
run
break codegen_entity_address
run
break codegen.c:1052
run
break codegen_generate_variable_access_for_array
run
break codegen.c:679
run
print codegen_entity_private(entity)->address
print &codegen_entity_private(entity)->address
watch *0x5555555a34e4
run
bt
break resolver_default_entity_data_set_address
run
next
print offset
print entity_data->address
c
next
print offset
next
print *entity_data->address
c
next
print offset
print *variable_node(var_node)->var.name
step
step
next
step
